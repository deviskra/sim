#include <map>#include <vector>#include <TCanvas.h>#include <TGraph.h>#include <TF1.h>#include <TRandom.h>#include "data_storage.h"#include "Config.h"#ifndef Process_h#define Process_h 1using namespace std;class Process{public:   //Process();   Process(Config &);   ~Process();    int run();private: //Methods    int parse(); // set up all varibles// utilities    int discomment(stringstream &, char); // drop out comments (all after char)    string discomment(string, char );    int ignore_endl(string &, char); // ignore all end of line symbols in a parsing string     private: //Variables   Config conf;   vector<string> read;   vector<double> data; // container for read data   vector<int> write; // element numbers in the data vector for output   int selector; // element number in the data vector to choose corresponding impulse function   int time; //  element number in the data vector which denotes global time   double dt; // time discretization   double seed;   map<int, vector<TF1> > impulse; // <selector, transformation>, here impulse[selector][0] is average value;                                   // impulse[selector][1] is dispersion if any.   map<string, vector<TF1> > asc; // amplitude-space characteristic <filename, transformation>   map<string, vector<double> > output;//this one will contain data of each output      ::DataStorage * ds;  //    };#endif